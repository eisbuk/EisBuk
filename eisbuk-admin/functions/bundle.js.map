{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://functions/./src/dataTriggers.ts","webpack://functions/./src/index.ts","webpack://functions/./src/migrations.ts","webpack://functions/./src/security.ts","webpack://functions/./src/testData.ts","webpack://functions/./src/testSlots.ts","webpack://functions/./src/utils.ts","webpack://functions/../../eisbuk-shared/dist/enums/firestore.js","webpack://functions/../../eisbuk-shared/dist/index.js","webpack://functions/../../eisbuk-shared/dist/types/firestore.js","webpack://functions/external \"firebase-admin\"","webpack://functions/external \"firebase-functions\"","webpack://functions/external \"lodash\"","webpack://functions/external \"luxon\"","webpack://functions/external \"uuid\"","webpack://functions/webpack/bootstrap","webpack://functions/webpack/startup"],"sourcesContent":["import * as functions from \"firebase-functions\";\nimport admin from \"firebase-admin\";\nimport { v4 } from \"uuid\";\nimport { DateTime } from \"luxon\";\n\nimport { fs2luxon } from \"./utils\";\n\nconst uuidv4 = v4;\n\n/**\n * Adds the secret_key to a user if it's missing.\n * Updates a copy of a subset of user data in user's bookings doc, accessible by\n * anonymous users who have access to `secret_key`.\n */\nexport const addMissingSecretKey = functions\n  .region(\"europe-west6\")\n  .firestore.document(\"organizations/{organization}/customers/{customerId}\")\n  .onWrite(async (change, context) => {\n    const db = admin.firestore();\n\n    const { organization, customerId } = context.params as Record<\n      string,\n      string\n    >;\n\n    const after = change.after.data()!;\n\n    if (after) {\n      const secretKey: string = after.secret_key || uuidv4();\n\n      // Create a record in /bookings with this secret key as id\n      // and the customer name\n      const bookingsRoot = {\n        // // eslint-disable-next-line @typescript-eslint/camelcase\n        customer_id: customerId,\n        ...(after.name && { name: after.name }),\n        ...(after.surname && { surname: after.surname }),\n        ...(after.category && { category: after.category }),\n      };\n\n      await db\n        .collection(\"organizations\")\n        .doc(organization)\n        .collection(\"bookings\")\n        .doc(secretKey)\n        .set(bookingsRoot);\n\n      return after.secret_key\n        ? null\n        : // // eslint-disable-next-line @typescript-eslint/camelcase\n          change.after.ref.update({ secret_key: secretKey });\n    }\n    return change.after;\n  });\n\n/**\n * Maintain a copy of each slot in a different structure aggregated by month.\n * This allows to update small documents while still being able to get data for\n * a whole month in a single read.\n * The cost is one extra write per each update to the slots.\n */\nexport const aggregateSlots = functions\n  .region(\"europe-west6\")\n  .firestore.document(\"organizations/{organization}/slots/{slotId}\")\n  .onWrite(async (change, context) => {\n    const db = admin.firestore();\n\n    const { organization, slotId: id } = context.params as Record<\n      string,\n      string\n    >;\n\n    let luxonDay: DateTime;\n    let newSlot: FirebaseFirestore.DocumentData;\n\n    const afterData = change.after.data();\n\n    if (afterData) {\n      newSlot = { ...afterData, id };\n      luxonDay = DateTime.fromJSDate(new Date(newSlot.date.seconds * 1000));\n    } else {\n      luxonDay = DateTime.fromJSDate(\n        new Date(change.before.data()!.date.seconds * 1000)\n      );\n      newSlot = admin.firestore.FieldValue.delete();\n    }\n\n    const monthStr = luxonDay.toISO().substring(0, 7);\n    const dayStr = luxonDay.toISO().substring(0, 10);\n\n    await db\n      .collection(\"organizations\")\n      .doc(organization)\n      .collection(\"slotsByDay\")\n      /** @TODO : Maybe name these slotsByMonth to avoid confusion */\n      .doc(monthStr)\n      .set({ [dayStr]: { [id]: newSlot } }, { merge: true });\n\n    return change.after;\n  });\n\n/**\n * Maintain a copy of each slot in a different structure aggregated by month.\n * This allows to update small documents while still being able to get data for\n * a whole month in a single read.\n * The cost is one extra write per each update to the slots.\n */\nexport const aggregateBookings = functions\n  .region(\"europe-west6\")\n  .firestore.document(\n    \"organizations/{organization}/bookings/{secretKey}/data/{bookingId}\"\n  )\n  .onWrite(async (change, context) => {\n    const db = admin.firestore();\n\n    const { organization, secretKey } = context.params as Record<\n      string,\n      string\n    >;\n\n    const userData = (\n      await db\n        .collection(\"organizations\")\n        .doc(organization)\n        .collection(\"bookings\")\n        .doc(secretKey)\n        .get()\n    ).data();\n\n    const customerId = userData!.customer_id;\n\n    // check if update or delete\n    const isUpdate = change.after.exists;\n\n    const bookingData = isUpdate ? change.after.data()! : change.before.data()!;\n\n    const luxonDay = fs2luxon(bookingData.date);\n    const monthStr = luxonDay.toISO().substring(0, 7);\n\n    // on update field value will be duration from update\n    // on delete it will be delete sentinel\n    const fieldValue = isUpdate\n      ? bookingData.duration\n      : admin.firestore.FieldValue.delete();\n\n    if (!change.after.exists) functions.logger.log(\"deleting\");\n\n    return db\n      .collection(\"organizations\")\n      .doc(organization)\n      .collection(\"bookingsByDay\")\n      .doc(monthStr)\n      .set({ [bookingData.id]: { [customerId]: fieldValue } }, { merge: true });\n  });\n","import admin from \"firebase-admin\";\n\nadmin.initializeApp();\n\nexport * from \"./dataTriggers\";\nexport * from \"./migrations\";\nexport * from \"./security\";\nexport * from \"./testData\";\nexport * from \"./testSlots\";\n","import * as functions from \"firebase-functions\";\nimport admin from \"firebase-admin\";\nimport _ from \"lodash\";\n\nimport { Category } from \"eisbuk-shared\";\n\nimport { checkUser } from \"./utils\";\n\n/**\n * Migrates slot entries to struct containing plural 'categories' instead of single 'category'\n */\nexport const migrateSlotsToPluralCategories = functions\n  .region(\"europe-west6\")\n  .https.onCall(async ({ organization }: { organization: string }, context) => {\n    await checkUser(organization, context.auth);\n\n    const org = admin.firestore().collection(\"organizations\").doc(organization);\n    const existing = await org.collection(\"slots\").get();\n\n    const operations: Promise<any>[] = [];\n\n    existing.forEach((el) => {\n      const slotData = el.data();\n      const { category } = slotData as { category: Category };\n\n      if (category) {\n        const newData = {\n          // Remove the old `category` field and add the new `categories` one\n          ..._.omit(slotData, \"category\"),\n          categories: [category],\n        };\n        operations.push(org.collection(\"slots\").doc(el.id).set(newData));\n      }\n    });\n\n    functions.logger.info(`Updating ${operations.length} records`);\n\n    await Promise.all(operations);\n    functions.logger.info(`Finished: ${operations.length} records updated`);\n  });\n","import * as functions from \"firebase-functions\";\nimport admin from \"firebase-admin\";\n\n/**\n * Admin authentication function\n */\nexport const amIAdmin = functions\n  .region(\"europe-west6\")\n  .https.onCall(\n    async ({ organization }: { organization: string }, { auth }) => {\n      // fail early if no auth\n      if (!auth) return { amIAdmin: false };\n\n      const org = (\n        await admin\n          .firestore()\n          .collection(\"organizations\")\n          .doc(organization)\n          .get()\n      ).data();\n\n      const amIAdmin: boolean =\n        org &&\n        org.admins &&\n        (org.admins.includes(auth.token.email) ||\n          org.admins.includes(auth.token.phone_number));\n\n      return { amIAdmin };\n    }\n  );\n","import * as functions from \"firebase-functions\";\nimport admin from \"firebase-admin\";\nimport { DateTime } from \"luxon\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\n\nimport { Category } from \"eisbuk-shared\";\n\nimport { checkUser } from \"./utils\";\n\nimport * as FIRST_NAMES from \"./assets/italian-names.json\";\nimport * as LAST_NAMES from \"./assets/italian-surnames.json\";\n\nconst uuidv4 = v4;\n\ninterface Payload {\n  numUsers: number;\n  organization: string;\n}\n\n/**\n * Creates users for provided organization\n */\nexport const createTestData = functions\n  .region(\"europe-west6\")\n  .https.onCall(async ({ numUsers = 1, organization }: Payload, context) => {\n    /** @TODO maybe create new organization if one doesn't exist */\n    await checkUser(organization, context.auth);\n\n    functions.logger.info(`Creating ${numUsers} test users`);\n    functions.logger.error(`Creating ${numUsers} test users`);\n\n    await createUsers(numUsers, organization);\n\n    return { success: true };\n  });\n\n/**\n * Ping endpoint function\n */\nexport const ping = functions.region(\"europe-west6\").https.onCall((data) => {\n  functions.logger.info(\"ping invoked\");\n  return { pong: true, data: { ...data } };\n});\n\n/**\n * Creates dummy organizations with two dummy admins\n */\nexport const createOrganization = functions\n  .region(\"europe-west6\")\n  .https.onCall(({ organization }: Pick<Payload, \"organization\">) => {\n    const db = admin.firestore();\n\n    return db\n      .collection(\"organizations\")\n      .doc(organization)\n      .set({\n        admins: [\"test@eisbuk.it\", \"+39123\"],\n      });\n  });\n\n/**\n * Creates provided number of users and adds them as customers to provided organization\n * @param numUsers\n * @param organization\n */\nconst createUsers = async (\n  numUsers: number,\n  organization: string\n): Promise<void> => {\n  const db = admin.firestore();\n  const org = db.collection(\"organizations\").doc(organization);\n\n  _.range(numUsers).map(async () => {\n    const name = _.sample(FIRST_NAMES);\n    const surname = _.sample(LAST_NAMES);\n    const customer = {\n      id: uuidv4(),\n      birthday: \"2000-01-01\",\n      name,\n      surname,\n      email: toEmail(`${name}.${surname}@example.com`.toLowerCase()),\n      phone: \"12345\",\n      category: _.sample(Object.values(Category)),\n      certificateExpiration: DateTime.local()\n        .plus({ days: _.random(-40, 200) })\n        .toISODate(),\n    };\n\n    await org.collection(\"customers\").doc(customer.id).set(customer);\n  });\n};\n\n/**\n * Creates email friendly string from provided str parameter\n * @param str string to convert to email\n * @returns email friendly string\n */\nconst toEmail = (str: string): string => _.deburr(str.replace(/ /i, \".\"));\n","import * as functions from \"firebase-functions\";\nimport admin from \"firebase-admin\";\nimport _ from \"lodash\";\n\nimport { Category, SlotType } from \"eisbuk-shared\";\n\nimport { checkUser, roundTo } from \"./utils\";\n\nconst CATEGORIES = Object.values(Category);\nconst NOTES = [\"\", \"Pista 1\", \"Pista 2\"];\nconst TYPES = Object.values(SlotType);\n\n/**\n * Fills day with four dummy slots\n * @param day\n * @param organization\n * @returns\n */\nconst fillDay = async (day: number, organization: string): Promise<void> => {\n  const start = new admin.firestore.Timestamp(day, 0);\n  const end = new admin.firestore.Timestamp(day + 86400, 0);\n  const org = admin.firestore().collection(\"organizations\").doc(organization);\n\n  const existing = await org\n    .collection(\"slots\")\n    .where(\"date\", \">=\", start)\n    .where(\"date\", \"<=\", end)\n    .get();\n\n  // delete existing data\n  const toDelete: Promise<FirebaseFirestore.WriteResult>[] = [];\n\n  existing.forEach((el) => {\n    toDelete.push(el.ref.delete());\n  });\n\n  await Promise.all(toDelete);\n\n  const slotsColl = org.collection(\"slots\");\n  const Timestamp = admin.firestore.Timestamp;\n\n  // create new slots\n  const toCreate = [\n    slotsColl.add({\n      date: new Timestamp(day + 9 * 3600, 0),\n      type: _.sample(TYPES),\n      durations: [\"60\"],\n      categories: _.sampleSize(CATEGORIES, _.random(CATEGORIES.length - 1) + 1),\n      notes: _.sample(NOTES),\n    }),\n    slotsColl.add({\n      date: new Timestamp(day + 10 * 3600, 0),\n      type: _.sample(TYPES),\n      durations: [\"60\"],\n      categories: _.sampleSize(CATEGORIES, _.random(CATEGORIES.length - 1) + 1),\n      notes: _.sample(NOTES),\n    }),\n    slotsColl.add({\n      date: new Timestamp(day + 15 * 3600, 0),\n      type: _.sample(TYPES),\n      durations: [\"60\", \"90\", \"120\"],\n      categories: _.sampleSize(CATEGORIES, _.random(CATEGORIES.length - 1) + 1),\n      notes: _.sample(NOTES),\n    }),\n    slotsColl.add({\n      date: new Timestamp(day + 17.5 * 3600, 0),\n      type: _.sample(TYPES),\n      durations: [\"60\", \"90\", \"120\"],\n      categories: _.sampleSize(CATEGORIES, _.random(CATEGORIES.length - 1) + 1),\n      notes: _.sample(NOTES),\n    }),\n  ];\n\n  await Promise.all(toCreate);\n\n  return;\n};\n\n/**\n * Fills a month worth of days with dummy slots, starting two weeks ago\n */\nexport const createTestSlots = functions\n  .region(\"europe-west6\")\n  .https.onCall(async ({ organization }: { organization: string }, context) => {\n    await checkUser(organization, context.auth);\n\n    functions.logger.info(\"Creating test slots...\");\n\n    const today = roundTo(admin.firestore.Timestamp.now().seconds, 86400);\n    const daysToFill: Promise<void>[] = [];\n\n    for (let i = -14; i < 15; i++) {\n      const day = today + i * 86400;\n      daysToFill.push(fillDay(day, organization));\n    }\n\n    await Promise.all(daysToFill);\n\n    return \"Test slots created\";\n  });\n","import * as functions from \"firebase-functions\";\nimport { CallableContext } from \"firebase-functions/lib/providers/https\";\nimport admin from \"firebase-admin\";\nimport { Timestamp } from \"@google-cloud/firestore\";\nimport { DateTime } from \"luxon\";\n\ntype Auth = CallableContext[\"auth\"];\n\n/**\n * Round the given val to the nearest multiple of modbase\n * ```\n * roundTo(12, 5) === 10\n * roundTo(12, 4) === 12\n * roundTo(12, 7) === 7\n * roundTo(17, 4) === 16\n * ```\n * @param val\n * @param modbase\n * @returns\n */\nexport const roundTo = (val: number, modbase: number): number =>\n  Math.floor(val / modbase) * modbase;\n\n/**\n * Receives an organization name and an auth info object as\n * provided by the Firebase SDK. Raises an unauthorized exception\n * if the user is not authorized to manage the given organization\n * @param organization\n * @param auth\n */\nexport const checkUser = async (\n  organization: string,\n  auth: Auth\n): Promise<void | never> => {\n  if (auth && auth.token && (auth.token.email || auth.token.phone_number)) {\n    const org = await admin\n      .firestore()\n      .collection(\"organizations\")\n      .doc(organization)\n      .get();\n    if (!isOrgAdmin(org.data()?.admins, auth)) {\n      throwUnauth();\n    }\n  } else {\n    throwUnauth();\n  }\n};\n\n/**\n * Checks if provided organization has admin and\n * if user in fact is admin of said organization\n * @param admins array of admin credentials (email or name)\n * @param auth auth object of user we're checking out\n * @returns\n */\nconst isOrgAdmin = (admins: string[] | undefined, auth: Auth): boolean => {\n  // fail early\n  // if no admins are registered for the organization\n  // or no auth is present\n  if (!Array.isArray(admins) || !auth?.token) return false;\n\n  const { email, phone_number: phoneNumber } = auth.token;\n\n  return (email && admins.includes(email)) ||\n    (phoneNumber && admins.includes(phoneNumber))\n    ? true\n    : false;\n};\n\n/**\n * Throws unauthorized https error\n */\nconst throwUnauth = (): never => {\n  throw new functions.https.HttpsError(\n    \"permission-denied\",\n    \"unauthorized\",\n    \"The function must be called while authenticated with a user that is an admin of the given organization.\"\n  );\n};\n/**\n * Convert a firestore date to a luxon date\n * currently ignores microseconds since seconds are already\n * more than enough for our use case\n * @param fsdate date object in firebase form\n */\nexport const fs2luxon = (fsdate: Timestamp): DateTime => {\n  /** @TODO check fs date interface */\n  return DateTime.fromMillis(fsdate.seconds * 1000);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Duration = exports.Category = exports.SlotType = exports.BookingSubCollection = exports.OrgSubCollection = exports.Collection = void 0;\nvar Collection;\n(function (Collection) {\n    Collection[\"Organizations\"] = \"organizations\";\n})(Collection = exports.Collection || (exports.Collection = {}));\nvar OrgSubCollection;\n(function (OrgSubCollection) {\n    OrgSubCollection[\"Slots\"] = \"slots\";\n    OrgSubCollection[\"SlotsByDay\"] = \"slotsByDay\";\n    OrgSubCollection[\"Customers\"] = \"customers\";\n    OrgSubCollection[\"Bookings\"] = \"bookings\";\n    OrgSubCollection[\"BookingsByDay\"] = \"bookingsByDay\";\n})(OrgSubCollection = exports.OrgSubCollection || (exports.OrgSubCollection = {}));\nvar BookingSubCollection;\n(function (BookingSubCollection) {\n    BookingSubCollection[\"SubscribedSlots\"] = \"subscribedSlots\";\n})(BookingSubCollection = exports.BookingSubCollection || (exports.BookingSubCollection = {}));\nvar SlotType;\n(function (SlotType) {\n    SlotType[\"OffIceDancing\"] = \"off-ice-dancing\";\n    SlotType[\"Ice\"] = \"ice\";\n    SlotType[\"OffIceGym\"] = \"off-ice-gym\";\n})(SlotType = exports.SlotType || (exports.SlotType = {}));\nvar Category;\n(function (Category) {\n    Category[\"Course\"] = \"course\";\n    Category[\"Competitive\"] = \"competitive\";\n    Category[\"PreCompetitive\"] = \"pre-competitive\";\n    Category[\"Adults\"] = \"adults\";\n})(Category = exports.Category || (exports.Category = {}));\nvar Duration;\n(function (Duration) {\n    Duration[\"1h\"] = \"60\";\n    Duration[\"1.5h\"] = \"90\";\n    Duration[\"2h\"] = \"120\";\n})(Duration = exports.Duration || (exports.Duration = {}));\n//# sourceMappingURL=firestore.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./enums/firestore\"), exports);\n__exportStar(require(\"./types/firestore\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar firestore_1 = require(\"../enums/firestore\");\n//# sourceMappingURL=firestore.js.map","module.exports = require(\"firebase-admin\");","module.exports = require(\"firebase-functions\");","module.exports = require(\"lodash\");","module.exports = require(\"luxon\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"names":["uuidv4","v4","addMissingSecretKey","functions","region","firestore","document","onWrite","change","context","db","organization","customerId","params","after","data","secretKey","secret_key","bookingsRoot","customer_id","name","surname","category","collection","doc","set","ref","update","aggregateSlots","slotId","id","luxonDay","newSlot","afterData","DateTime","fromJSDate","Date","date","seconds","before","FieldValue","delete","monthStr","toISO","substring","dayStr","merge","aggregateBookings","get","isUpdate","exists","bookingData","fs2luxon","fieldValue","duration","logger","log","initializeApp","migrateSlotsToPluralCategories","https","onCall","checkUser","auth","org","existing","operations","forEach","el","slotData","newData","omit","categories","push","info","length","Promise","all","amIAdmin","admins","includes","token","email","phone_number","createTestData","numUsers","error","createUsers","success","ping","pong","createOrganization","range","map","sample","FIRST_NAMES","LAST_NAMES","customer","birthday","toEmail","toLowerCase","phone","Object","values","Category","certificateExpiration","local","plus","days","random","toISODate","str","deburr","replace","CATEGORIES","NOTES","TYPES","SlotType","fillDay","day","start","Timestamp","end","where","toDelete","slotsColl","toCreate","add","type","durations","sampleSize","notes","createTestSlots","today","roundTo","now","daysToFill","i","val","modbase","Math","floor","isOrgAdmin","throwUnauth","Array","isArray","phoneNumber","HttpsError","fsdate","fromMillis","Duration","OrgSubCollection","defineProperty","exports","value","BookingSubCollection","Collection","__createBinding","this","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}
