<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="104" failures="0" errors="0" time="39.499">
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="1" timestamp="2021-08-31T15:50:52" time="5.332" tests="9">
    <testcase classname="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlot&apos; onClick if within &quot;slot&quot; context and no prop for dialog has been provided" name="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlot&apos; onClick if within &quot;slot&quot; context and no prop for dialog has been provided" time="0.115">
    </testcase>
    <testcase classname="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlotsDay&apos; onClick if within &quot;day&quot; context and no prop for dialog has been provided" name="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlotsDay&apos; onClick if within &quot;day&quot; context and no prop for dialog has been provided" time="0.03">
    </testcase>
    <testcase classname="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlotsWeek&apos; onClick if within &quot;week&quot; context and no prop for dialog has been provided" name="SlotOperationButtons Test straightforward delete dispatching (withouth the dialog) should dispatch &apos;deleteSlotsWeek&apos; onClick if within &quot;week&quot; context and no prop for dialog has been provided" time="0.034">
    </testcase>
    <testcase classname="SlotOperationButtons Test delete action dispatching with added dialog confirmation step if &apos;dialog&apos; prop provided, should open a confirm dialog on click (without dispatching the delete function)" name="SlotOperationButtons Test delete action dispatching with added dialog confirmation step if &apos;dialog&apos; prop provided, should open a confirm dialog on click (without dispatching the delete function)" time="0.124">
    </testcase>
    <testcase classname="SlotOperationButtons Test delete action dispatching with added dialog confirmation step should dispatch delete function after confirming the dialog (if &apos;dialog&apos; prop are provided)" name="SlotOperationButtons Test delete action dispatching with added dialog confirmation step should dispatch delete function after confirming the dialog (if &apos;dialog&apos; prop are provided)" time="0.091">
    </testcase>
    <testcase classname="SlotOperationButtons Test delete action dispatching with added dialog confirmation step should close the dialog on negative confirmation (&quot;No&quot;)" name="SlotOperationButtons Test delete action dispatching with added dialog confirmation step should close the dialog on negative confirmation (&quot;No&quot;)" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" name="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" time="0.003">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos; and no value for &apos;slot&apos; has been provided within the context" name="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos; and no value for &apos;slot&apos; has been provided within the context" time="0.005">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" name="SlotOperationButtons &apos;DeleteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Slot triggers" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:50:58" time="4.284" tests="1">
    <testcase classname="Slot triggers update the slots summary on slot creation" name="Slot triggers update the slots summary on slot creation" time="3.718">
    </testcase>
  </testsuite>
  <testsuite name="Customer triggers" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:02" time="2.321" tests="2">
    <testcase classname="Customer triggers apply secret_key when a customer record is added and keeps customer data up to date" name="Customer triggers apply secret_key when a customer record is added and keeps customer data up to date" time="1.6">
    </testcase>
    <testcase classname="Customer triggers populate bookings when a customer record is added or changed" name="Customer triggers populate bookings when a customer record is added or changed" time="0.537">
    </testcase>
  </testsuite>
  <testsuite name="SlotCard" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:05" time="3.357" tests="8">
    <testcase classname="SlotCard Smoke test should render properly" name="SlotCard Smoke test should render properly" time="0.154">
    </testcase>
    <testcase classname="SlotCard DurationsSection functionality if clicked duration is not subscribed to, should subscribe to said duration and unsubscribe from any other duration" name="SlotCard DurationsSection functionality if clicked duration is not subscribed to, should subscribe to said duration and unsubscribe from any other duration" time="0.102">
    </testcase>
    <testcase classname="SlotCard DurationsSection functionality if clicked duration is subscribed to, should unsubscribe from said duration" name="SlotCard DurationsSection functionality if clicked duration is subscribed to, should unsubscribe from said duration" time="0.061">
    </testcase>
    <testcase classname="SlotCard DurationsSection functionality if admin view, clicking on durations won&apos;t have any effect" name="SlotCard DurationsSection functionality if admin view, clicking on durations won&apos;t have any effect" time="0.074">
    </testcase>
    <testcase classname="SlotCard SlotOperationButtons functionality should open slot form on edit slot click" name="SlotCard SlotOperationButtons functionality should open slot form on edit slot click" time="0.408">
    </testcase>
    <testcase classname="SlotCard SlotOperationButtons functionality should dispatch delete action on delete confirmation click" name="SlotCard SlotOperationButtons functionality should dispatch delete action on delete confirmation click" time="0.126">
    </testcase>
    <testcase classname="SlotCard Test clicking on slot card should fire &apos;onClick&apos; function if provided" name="SlotCard Test clicking on slot card should fire &apos;onClick&apos; function if provided" time="0.073">
    </testcase>
    <testcase classname="SlotCard Test clicking on slot card should not explode on click if no &apos;onClick&apos; handler has been provided" name="SlotCard Test clicking on slot card should not explode on click if no &apos;onClick&apos; handler has been provided" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="Selectors" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:08" time="0.437" tests="3">
    <testcase classname="Selectors can retrieve the app date" name="Selectors can retrieve the app date" time="0">
    </testcase>
    <testcase classname="Selectors can select the bookings" name="Selectors can select the bookings" time="0.005">
    </testcase>
    <testcase classname="Selectors do not explode when some values are undefined" name="Selectors do not explode when some values are undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Booking aggregation triggers" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:09" time="2.191" tests="1">
    <testcase classname="Booking aggregation triggers copy over booking when created" name="Booking aggregation triggers copy over booking when created" time="2.017">
    </testcase>
  </testsuite>
  <testsuite name="Cloud functions" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:11" time="2.283" tests="2">
    <testcase classname="Cloud functions can be pinged" name="Cloud functions can be pinged" time="0.493">
    </testcase>
    <testcase classname="Cloud functions denies access to users not belonging to the organization" name="Cloud functions denies access to users not belonging to the organization" time="1.346">
    </testcase>
  </testsuite>
  <testsuite name="CustomerSlots" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:13" time="2.086" tests="4">
    <testcase classname="CustomerSlots Test pagination should paginate by month if &apos;view=&quot;book_ice&quot;&apos;" name="CustomerSlots Test pagination should paginate by month if &apos;view=&quot;book_ice&quot;&apos;" time="0.302">
    </testcase>
    <testcase classname="CustomerSlots Test pagination should paginate by week if &apos;view=&quot;book_off_ice&quot;&apos;" name="CustomerSlots Test pagination should paginate by week if &apos;view=&quot;book_off_ice&quot;&apos;" time="0.302">
    </testcase>
    <testcase classname="CustomerSlots Test booking actions should subscribe to given slot (and a given duration) on click" name="CustomerSlots Test booking actions should subscribe to given slot (and a given duration) on click" time="0.261">
    </testcase>
    <testcase classname="CustomerSlots Test booking actions should unsubscribe from duration on click if that duration is subscribed to" name="CustomerSlots Test booking actions should unsubscribe from duration on click if that duration is subscribed to" time="0.291">
    </testcase>
  </testsuite>
  <testsuite name="Date Navigation" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:15" time="0.743" tests="9">
    <testcase classname="Date Navigation Smoke test should render properly as a render prop" name="Date Navigation Smoke test should render properly as a render prop" time="0.058">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with render prop data passing should pass start date of current view to render function" name="Date Navigation Test main functionality (date) with render prop data passing should pass start date of current view to render function" time="0.043">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with render prop data passing should fall back to start of next timeframe if no default date has been provided" name="Date Navigation Test main functionality (date) with render prop data passing should fall back to start of next timeframe if no default date has been provided" time="0.03">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with render prop data passing should increment/decrement start date with respect to &apos;jump&apos; prop" name="Date Navigation Test main functionality (date) with render prop data passing should increment/decrement start date with respect to &apos;jump&apos; prop" time="0.07">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with render prop data passing should fall back to week if no jump is provided" name="Date Navigation Test main functionality (date) with render prop data passing should fall back to week if no jump is provided" time="0.07">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with render prop data passing fault tolerance: should fall back to the start of timeframe if default date is not start" name="Date Navigation Test main functionality (date) with render prop data passing fault tolerance: should fall back to the start of timeframe if default date is not start" time="0.044">
    </testcase>
    <testcase classname="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate function with start date and the date of last day of the week, in case of week view" name="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate function with start date and the date of last day of the week, in case of week view" time="0.039">
    </testcase>
    <testcase classname="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate only once, with month string for month view" name="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate only once, with month string for month view" time="0.032">
    </testcase>
    <testcase classname="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate only once, with day string for day view" name="Date Navigation Test rendering of the timeframe (startTime-endTime) title should call translate only once, with day string for day view" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Organization permissions" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:16" time="0.782" tests="2">
    <testcase classname="Organization permissions let only admin access an organization data (by email)" name="Organization permissions let only admin access an organization data (by email)" time="0.484">
    </testcase>
    <testcase classname="Organization permissions let admin access an organization data (by phone)" name="Organization permissions let admin access an organization data (by phone)" time="0.16">
    </testcase>
  </testsuite>
  <testsuite name="Date Navigation" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:17" time="0.902" tests="4">
    <testcase classname="Date Navigation Test toggle button functionality should not render toggle button if &apos;showToggle = false&apos;" name="Date Navigation Test toggle button functionality should not render toggle button if &apos;showToggle = false&apos;" time="0.064">
    </testcase>
    <testcase classname="Date Navigation Test toggle button functionality should pass toggle state to render function" name="Date Navigation Test toggle button functionality should pass toggle state to render function" time="0.154">
    </testcase>
    <testcase classname="Date Navigation Test toggle button functionality if &apos;showToggle == true&apos;, should show &apos;extraButtons&apos; only if &apos;toggleState === true&apos;" name="Date Navigation Test toggle button functionality if &apos;showToggle == true&apos;, should show &apos;extraButtons&apos; only if &apos;toggleState === true&apos;" time="0.32">
    </testcase>
    <testcase classname="Date Navigation Test toggle button functionality if &apos;showToggle == false&apos;, should show &apos;extraButtons&apos; immediately" name="Date Navigation Test toggle button functionality if &apos;showToggle == false&apos;, should show &apos;extraButtons&apos; immediately" time="0.133">
    </testcase>
  </testsuite>
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="1" timestamp="2021-08-31T15:51:18" time="0.566" tests="5">
    <testcase classname="SlotOperationButtons &apos;NewSlotButton&apos; functionality test should open &apos;SlotForm&apos; on click" name="SlotOperationButtons &apos;NewSlotButton&apos; functionality test should open &apos;SlotForm&apos; on click" time="0.236">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;NewSlotButton&apos; functionality test should close &apos;SlotForm&apos; on forms &apos;onClose&apos; trigger" name="SlotOperationButtons &apos;NewSlotButton&apos; functionality test should close &apos;SlotForm&apos; on forms &apos;onClose&apos; trigger" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" name="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" time="0.003">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if trying to render within any context other than &quot;day&quot;" name="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if trying to render within any context other than &quot;day&quot;" time="0.004">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if no value for &apos;date&apos; param has been provided within the context" name="SlotOperationButtons &apos;NewSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if no value for &apos;date&apos; param has been provided within the context" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="1" timestamp="2021-08-31T15:51:18" time="0.62" tests="5">
    <testcase classname="SlotOperationButtons &apos;EditSlotButton&apos; functionality test should open &apos;SlotForm&apos; on click (with current slot as &apos;slotToEdit&apos;)" name="SlotOperationButtons &apos;EditSlotButton&apos; functionality test should open &apos;SlotForm&apos; on click (with current slot as &apos;slotToEdit&apos;)" time="0.21">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;EditSlotButton&apos; functionality test should close &apos;SlotForm&apos; on forms &apos;onClose&apos; trigger" name="SlotOperationButtons &apos;EditSlotButton&apos; functionality test should close &apos;SlotForm&apos; on forms &apos;onClose&apos; trigger" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" name="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" time="0.002">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if no value for &apos;slot&apos; param has been provided within the context" name="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if no value for &apos;slot&apos; param has been provided within the context" time="0.004">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if trying to render under any &apos;contextType&apos; other than &quot;slot&quot;" name="SlotOperationButtons &apos;EditSlotButton&apos; edge cases/error handling test should not render the button and should log error to console if trying to render under any &apos;contextType&apos; other than &quot;slot&quot;" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CustomerNavigation" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:19" time="0.626" tests="4">
    <testcase classname="CustomerNavigation Test routing should push to proper route on click" name="CustomerNavigation Test routing should push to proper route on click" time="0.082">
    </testcase>
    <testcase classname="CustomerNavigation Test routing should only change the customer route part, leaving rest of the route the same" name="CustomerNavigation Test routing should only change the customer route part, leaving rest of the route the same" time="0.04">
    </testcase>
    <testcase classname="CustomerNavigation Test routing button should be disabled if the route is already active" name="CustomerNavigation Test routing button should be disabled if the route is already active" time="0.04">
    </testcase>
    <testcase classname="CustomerNavigation Test routing should push to &apos;book_ice&apos; if no &apos;customerRoute&apos; part is present in &apos;pathname&apos;" name="CustomerNavigation Test routing should push to &apos;book_ice&apos; if no &apos;customerRoute&apos; part is present in &apos;pathname&apos;" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="Date Navigation" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:20" time="0.428" tests="5">
    <testcase classname="Date Navigation Test main functionality (date) with router should try and read date from router" name="Date Navigation Test main functionality (date) with router should try and read date from router" time="0.049">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with router fault tolerance: should fall back to default value if date value in the path is not a valid ISO date string" name="Date Navigation Test main functionality (date) with router fault tolerance: should fall back to default value if date value in the path is not a valid ISO date string" time="0.031">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with router edge case: should ignore route date (and use default value) if route date is provided, but not in the &apos;withRouter&apos; mode" name="Date Navigation Test main functionality (date) with router edge case: should ignore route date (and use default value) if route date is provided, but not in the &apos;withRouter&apos; mode" time="0.035">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with router on date view switch, should `history.push()` the same path with new date param" name="Date Navigation Test main functionality (date) with router on date view switch, should `history.push()` the same path with new date param" time="0.031">
    </testcase>
    <testcase classname="Date Navigation Test main functionality (date) with router if no date path param provided, should push default date (to synchronize route and local state)" name="Date Navigation Test main functionality (date) with router if no date path param provided, should push default date (to synchronize route and local state)" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:20" time="0.486" tests="6">
    <testcase classname="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;slot&quot;&apos; without error with all appropriate buttons passed in" name="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;slot&quot;&apos; without error with all appropriate buttons passed in" time="0.043">
    </testcase>
    <testcase classname="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;day&quot;&apos; without error with all appropriate buttons passed in" name="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;day&quot;&apos; without error with all appropriate buttons passed in" time="0.041">
    </testcase>
    <testcase classname="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;week&quot;&apos; without error with all appropriate buttons passed in" name="SlotOperationButtons Smoke test should render whitelisted buttons &apos;contextType=&quot;week&quot;&apos; without error with all appropriate buttons passed in" time="0.03">
    </testcase>
    <testcase classname="SlotOperationButtons Test context functionality should provide children with the &apos;contextType&apos; provided as props" name="SlotOperationButtons Test context functionality should provide children with the &apos;contextType&apos; provided as props" time="0.006">
    </testcase>
    <testcase classname="SlotOperationButtons Test context functionality should provide children with the context of &apos;slot&apos; if provided as props" name="SlotOperationButtons Test context functionality should provide children with the context of &apos;slot&apos; if provided as props" time="0.007">
    </testcase>
    <testcase classname="SlotOperationButtons Test context functionality should provide children with the context of &apos;date&apos; provided as props" name="SlotOperationButtons Test context functionality should provide children with the context of &apos;date&apos; provided as props" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:21" time="0.291" tests="6">
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; functionality test if &apos;contextType=&quot;day&quot;&apos; should paste all slots of the day in clipboard to new day" name="SlotOperationButtons &apos;PasteButton&apos; functionality test if &apos;contextType=&quot;day&quot;&apos; should paste all slots of the day in clipboard to new day" time="0.046">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; functionality test if &apos;contextType=&quot;week&quot;&apos; should paste the week slots from clipboard to new week" name="SlotOperationButtons &apos;PasteButton&apos; functionality test if &apos;contextType=&quot;week&quot;&apos; should paste the week slots from clipboard to new week" time="0.015">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; functionality test should be disabled if no &apos;slotsToCopy&apos; for given &apos;contextType&apos;" name="SlotOperationButtons &apos;PasteButton&apos; functionality test should be disabled if no &apos;slotsToCopy&apos; for given &apos;contextType&apos;" time="0.01">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" name="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if not within &apos;SlotOperationButtons&apos; context" time="0.002">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos;" name="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos;" time="0.004">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" name="SlotOperationButtons &apos;PasteButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Helpers" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:21" time="0.457" tests="11">
    <testcase classname="Helpers `capitalizeFirst` function should return passed string, with first letter capitalized" name="Helpers `capitalizeFirst` function should return passed string, with first letter capitalized" time="0.001">
    </testcase>
    <testcase classname="Helpers `capitalizeFirst` function should capitalize all of the first letters for words divided by &apos;-&apos; sign" name="Helpers `capitalizeFirst` function should capitalize all of the first letters for words divided by &apos;-&apos; sign" time="0">
    </testcase>
    <testcase classname="Helpers &apos;mode&apos; function should return member with highest occurrence" name="Helpers &apos;mode&apos; function should return member with highest occurrence" time="0.001">
    </testcase>
    <testcase classname="Helpers &apos;mode&apos; function should return &apos;null&apos; if two values have same number of occurrences" name="Helpers &apos;mode&apos; function should return &apos;null&apos; if two values have same number of occurrences" time="0">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsDay&apos; function should shift a list of slots to a new day, maintaining the time" name="Slot utils &apos;shiftSlotsDay&apos; function should shift a list of slots to a new day, maintaining the time" time="0.003">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsWeek&apos; function  should shift a list of slots to a new week, maintaining the time and the day of week" name="Slot utils &apos;shiftSlotsWeek&apos; function  should shift a list of slots to a new week, maintaining the time and the day of week" time="0.004">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsWeek&apos; function  error handling: should filter slots not belonging to given week" name="Slot utils &apos;shiftSlotsWeek&apos; function  error handling: should filter slots not belonging to given week" time="0.008">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsWeek&apos; function  fault tolerence: should infer old week by majority of slots belonging to it" name="Slot utils &apos;shiftSlotsWeek&apos; function  fault tolerence: should infer old week by majority of slots belonging to it" time="0.004">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsWeek&apos; function  error handling: should throw an error if the slots are equally distributed across two different weeks" name="Slot utils &apos;shiftSlotsWeek&apos; function  error handling: should throw an error if the slots are equally distributed across two different weeks" time="0.007">
    </testcase>
    <testcase classname="Slot utils &apos;shiftSlotsWeek&apos; function  fault tolerence: should fall back to week start of passed &apos;newWeek&apos; if &apos;newWeek&apos; isn&apos;t week start" name="Slot utils &apos;shiftSlotsWeek&apos; function  fault tolerence: should fall back to week start of passed &apos;newWeek&apos; if &apos;newWeek&apos; isn&apos;t week start" time="0.002">
    </testcase>
    <testcase classname="Date utils &apos;luxon2ISODate&apos; function should return ISO date string with only date part (excluding time of day) from luxon date" name="Date utils &apos;luxon2ISODate&apos; function should return ISO date string with only date part (excluding time of day) from luxon date" time="0">
    </testcase>
  </testsuite>
  <testsuite name="DateNavigation" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:21" time="0.334" tests="1">
    <testcase classname="DateNavigation Integration test &apos;withRouter&apos; should update local store after paginating using path" name="DateNavigation Integration test &apos;withRouter&apos; should update local store after paginating using path" time="0.11">
    </testcase>
  </testsuite>
  <testsuite name="SlotOperationButtons" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:22" time="0.264" tests="5">
    <testcase classname="SlotOperationButtons &apos;CopyButton&apos; functionality test if &apos;contextType=&quot;day&quot;&apos; should add all slots of the day to clipboard on click" name="SlotOperationButtons &apos;CopyButton&apos; functionality test if &apos;contextType=&quot;day&quot;&apos; should add all slots of the day to clipboard on click" time="0.034">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;CopyButton&apos; functionality test if &apos;contextType=&quot;week&quot;&apos; should add all slots of the week to clipboard on click" name="SlotOperationButtons &apos;CopyButton&apos; functionality test if &apos;contextType=&quot;week&quot;&apos; should add all slots of the week to clipboard on click" time="0.019">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if not under &apos;SlotOperationButtons&apos; context" name="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if not under &apos;SlotOperationButtons&apos; context" time="0.002">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos;" name="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;slot&quot;&apos;" time="0.004">
    </testcase>
    <testcase classname="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" name="SlotOperationButtons &apos;CopyButton&apos; edge cases/error handling test should not render the button and should log error to console if within &apos;contextType=&quot;day&quot; | &quot;week&quot;&apos; and no value for &apos;date&apos; has been provided within the context" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SlotsDayContainer" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:22" time="0.381" tests="3">
    <testcase classname="SlotsDayContainer Render test should render children" name="SlotsDayContainer Render test should render children" time="0.041">
    </testcase>
    <testcase classname="SlotsDayContainer Render test should render additional buttons if provided and &apos;showAdditionalButtons=true&apos;" name="SlotsDayContainer Render test should render additional buttons if provided and &apos;showAdditionalButtons=true&apos;" time="0.064">
    </testcase>
    <testcase classname="SlotsDayContainer Render test should not render additional buttons if &apos;showAdditionalButtons=false&apos;" name="SlotsDayContainer Render test should not render additional buttons if &apos;showAdditionalButtons=false&apos;" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="&apos;/customers&apos; page" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:22" time="0.303" tests="2">
    <testcase classname="&apos;/customers&apos; page Test utils: &apos;splitSlotsByCustomerRoute&apos; should return record of slotsByDay for `book_ice` and `book_off_ice` type" name="&apos;/customers&apos; page Test utils: &apos;splitSlotsByCustomerRoute&apos; should return record of slotsByDay for `book_ice` and `book_off_ice` type" time="0.002">
    </testcase>
    <testcase classname="&apos;/customers&apos; page Test utils: &apos;splitSlotsByCustomerRoute&apos; should not explode if passed an empty object" name="&apos;/customers&apos; page Test utils: &apos;splitSlotsByCustomerRoute&apos; should not explode if passed an empty object" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Slot selectors &gt; " errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:23" time="0.289" tests="2">
    <testcase classname="Slot selectors &gt;  &apos;getSlotsForCustomer&apos; &gt;  if &apos;timeframe=&quot;month&quot;&apos; should get slots for a month with respect to &apos;startDate&apos; and provided category" name="Slot selectors &gt;  &apos;getSlotsForCustomer&apos; &gt;  if &apos;timeframe=&quot;month&quot;&apos; should get slots for a month with respect to &apos;startDate&apos; and provided category" time="0.001">
    </testcase>
    <testcase classname="Slot selectors &gt;  &apos;getSlotsForCustomer&apos; &gt;  if &apos;timeframe=&quot;week&quot;&apos; should get slots for a week with respect to &apos;startDate&apos; and provided category" name="Slot selectors &gt;  &apos;getSlotsForCustomer&apos; &gt;  if &apos;timeframe=&quot;week&quot;&apos; should get slots for a week with respect to &apos;startDate&apos; and provided category" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CustomerSlots" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:23" time="0.139" tests="2">
    <testcase classname="CustomerSlots Test utils: &apos;orderByWeekDay&apos; should accept an array of dates and order the dates by day of the week (mondays, tuesdays, etc.)" name="CustomerSlots Test utils: &apos;orderByWeekDay&apos; should accept an array of dates and order the dates by day of the week (mondays, tuesdays, etc.)" time="0.003">
    </testcase>
    <testcase classname="CustomerSlots Test utils: &apos;orderByWeekDay&apos; when week dates aren&apos;t ordered, should order them internally" name="CustomerSlots Test utils: &apos;orderByWeekDay&apos; when week dates aren&apos;t ordered, should order them internally" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Environment info" errors="0" failures="0" skipped="0" timestamp="2021-08-31T15:51:23" time="0.077" tests="1">
    <testcase classname="Environment info splits on the first double dash and returns the first part" name="Environment info splits on the first double dash and returns the first part" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BookingsCalendar" errors="0" failures="0" skipped="1" timestamp="2021-08-31T15:51:23" time="0.561" tests="1">
    <testcase classname="BookingsCalendar Test pagination should paginate by week" name="BookingsCalendar Test pagination should paginate by week" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>